<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vic.mapper.StudentMapper">

	<!-- 小东西，可以简化开发 -->
	<sql id="allColumns">
		id, name, age, birthday, address, delete_flag
	</sql>

	<!-- 实体类属性与数据库表字段不一致时，可以在这儿指定 -->
	<resultMap id="studentResultMap" type="Student">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="age" column="age"/>
		<result property="birthday" column="birthday"/>
		<result property="address" column="address"/>
		<result property="deleteFlag" column="delete_flag"/>
	</resultMap>

	<select id="queryUserById" resultMap="studentResultMap"><!-- resulttype="Student" -->
		select 
		<include refid="allColumns"/> 
		from m_student where id = #{id};
	</select>
	
	<!-- 插入一条数据 -->
	<insert id="insert" parameterType="Student"><!-- parameterType="hashmap" -->
		insert into m_student(name, age, birthday, address, delete_flag)
		values(#{name}, #{age}, #{birthday}, #{address}, 1);
	</insert>

	<select id="findNormalStudentWithNameLike" resultMap="studentResultMap">
		select
		<include refid="allColumns" />
		from m_student
		where delete_flag = 1
		<if test="name != null">
			and name like CONCAT('%',#{name},'%')
		</if>
	</select>

	<select id="testChoose" resultMap="studentResultMap">
		select
		<include refid="allColumns" />
		from m_student
		where delete_flag = 1
		<choose>
			<when test="name != null">
				and name like CONCAT('%',#{name},'%')
			</when>
			<when test="address != null">
				and address like CONCAT('%',#{address},'%')
			</when>
			<otherwise>
				and age &gt; 1
			</otherwise>
		</choose>
	</select>

	<!-- 动态条件 -->
	<select id="testWhere" resultMap="studentResultMap">
		select
		<include refid="allColumns" />
		from m_student
		<where>
			<if test="name != null">
				and name like CONCAT('%',#{name},'%')
			</if>
			<if test="address != null">
				and address like CONCAT('%',#{address},'%')
			</if>
		</where>
	</select>

	<!-- 和testWhere等价 -->
	<select id="testTrimInsteadOfWhere" resultMap="studentResultMap">
		select
		<include refid="allColumns" />
		from m_student
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="name != null">
				and name like CONCAT('%',#{name},'%')
			</if>
			<if test="address != null">
				and address like CONCAT('%',#{address},'%')
			</if>
		</trim>
	</select>

	<!-- 不为空时更新字段，注意每个条件中的逗号要有，最后一个不用加 -->
	<update id="testSet" parameterType="Student">
		update m_student
		<set>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="age != null">
				age = #{age},
			</if>
			<if test="birthday != null">
				birthday = #{birthday},
			</if>
			<if test="address != null">
				address = #{address}
			</if>
		</set>
		where id = #{id};
	</update>

	<!-- 和testSet等价 -->
	<update id="testTrimInsteadOfSet" parameterType="Student">
		update m_student
		<trim prefix="SET" suffixOverrides=",">
			<if test="name != null">
				name = #{name},
			</if>
			<if test="age != null">
				age = #{age},
			</if>
			<if test="birthday != null">
				birthday = #{birthday},
			</if>
			<if test="address != null">
				address = #{address}
			</if>
		</trim>
		where id = #{id};
	</update>

	<!-- foreach -->
	<select id="findStudentIn1" resultMap="studentResultMap">
		select
		<include refid="allColumns" />
		from m_student
		where delete_flag = 1
		and id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<!-- 通过ids查询数据集合 -->
	<select id="findStudentIn2" resultMap="studentResultMap">
		select
		<include refid="allColumns" />
		from m_student
		where delete_flag = 1
		and id in
		<trim suffixOverrides=" or id in ()">
			<foreach item="item" index="index" collection="list" open="(" close=")">
				<if test="index != 0">
					<choose>
						<when test="index % 1000 == 999">) or id in (</when>
						<otherwise>,</otherwise>
					</choose>
				</if>
				#{item}
			</foreach>
		</trim>
	</select>

	<!-- 根据id修改数据 -->
	<update id="updateAnyway" parameterType="Student">
		update m_student
		set name=#{name},
		<if test="age != null"><!-- and age != '' 当值允许为0时，此条件不能加！ -->
		age=#{age},
		</if>
		birthday=#{birthday},
		address=#{address}
		where id=#{id};
	</update>

	<!-- bind -->
	<select id="testBindElement" resultMap="studentResultMap">
		<bind name="namePattern" value="'%' + _parameter.getName() + '%'"/>
		select
		<include refid="allColumns" />
		from m_student
		where name like #{namePattern}
	</select>

	<!-- 逻辑删除用户 -->
	<update id="delete">
		update m_student
		set
		delete_flag = 2
		where id = #{id};
	</update>

	<!-- <update id="batchUpdate" parameterType="java.util.List">
	   update p_user_role_mapping
	   set modify_time = now()
	   , user_role_id = 
	   <foreach collection="list" item="item" index="index" separator=" " open="case ID" close="end">
	     when #{item.id} then #{item.user_role_id}
	   </foreach>
	   , modify_id = 
	   <foreach collection="list" item="item" index="index" separator=" " open="case ID" close="end">
	     when #{item.id} then #{item.modify_id}
	   </foreach>
	    where id in
	   <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
	     #{item.id}
	   </foreach>
	    
	 </update> -->
	
</mapper>